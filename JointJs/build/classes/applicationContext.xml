<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	 http://www.springframework.org/schema/context/spring-context-3.0.xsd
	  http://www.springframework.org/schema/tx
	  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	 <!-- 定义数据源组件 
	   作用:连接数据库
	 -->
 <!--  <bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName"
			value="com.mysql.jdbc.Driver">
		</property>
		<property name="url"
			value="jdbc:mysql://localhost:3306/mytest">
		</property>
		<property name="username" value="root"></property>
		<property name="password" value="root"></property>
	</bean> -->
  
  <!-- 
   <bean id="dataSource"
    class="org.apache.commons.dbcp.BasicDataSource">
    <property name="driverClassName"
      value="oracle.jdbc.driver.OracleDriver">
    </property>
    <property name="url"
      value="jdbc:oracle:thin:@192.168.80.60:1521:orcl">
    </property>
    <property name="username" value="NCDB"></property>
    <property name="password" value="Wfs586"></property>
  </bean>
   -->
  <bean id="dataSource"
    class="org.apache.commons.dbcp.BasicDataSource">
    <property name="driverClassName"
      value="oracle.jdbc.driver.OracleDriver">
    </property>
    <property name="url"
      value="jdbc:oracle:thin:@192.168.80.50:1521:orcl">
    </property>
    <property name="username" value="ncdb"></property>
    <property name="password" value="083737"></property>
  </bean>
  
   <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"></property>
        <property name="maxInMemorySize" value="10240000"></property>
    </bean>
  
  
  
    <!-- 创建sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--  指定数据源组件-->
		<property name="dataSource" ref="dataSource" />
		 <!-- 指定mybatis配置文件的路径-->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>
	
	<!--定义sqlSessionTemplate模板对象  引入sqlSessionFactory -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	 <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<!--使用MapperScannerConfigurer简化配置，
	引入此配置后，可以把dao的实现类略去,由程序自动生成实现类
	注意:1.生成动态实现类的bean对象的id值就是接口名称首字母小写
     2.确保sql映射文件的命名空间值为接口的限定名，且方法名与sql映射文件的id值相同
	  -->
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		 <!-- 引用sqlSessionFactory -->
		<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
		 <!--指定dao层的接口所在的包  -->
		<property name="basePackage" value="com.dao"/>
	</bean>
	
	
	<!-- 扫描所有的注解配置service -->
<context:component-scan base-package="com.service"></context:component-scan>


     <!-- 配置Spring的事务管理器  --> 
	  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">   
	      <property name="dataSource" ref="dataSource"/> 
	   </bean>
 <!-- 注解方式配置事物 --> 
 <tx:annotation-driven transaction-manager="transactionManager"/>

	
</beans>